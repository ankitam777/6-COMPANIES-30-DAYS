//https://leetcode.com/problems/shortest-unsorted-continuous-subarray/submissions/878825987/

//https://leetcode.com/problems/shortest-unsorted-continuous-subarray/description/

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int low=0;
        int high=nums.size()-1;
        
        while(low+1<nums.size() && nums[low]<=nums[low+1]){
            low++;
        }
        while(high-1>=0 && nums[high]>=nums[high-1]){
            high--;
        }
        if(low==nums.size()-1)
        return 0;
        

      
        int subarray_max=INT_MIN;
        int subarray_min=INT_MAX;
        for(int i=low;i<=high;i++){
            subarray_max=max(subarray_max,nums[i]);
            subarray_min=min(subarray_min,nums[i]);
        }

        while(low-1>=0 && subarray_min<nums[low-1]){
            low--;
        }
        while(high+1<=nums.size()-1 && subarray_max>nums[high+1]){
            high++;
        }
        return high-low+1;

        
    }
};
