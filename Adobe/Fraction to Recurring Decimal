//submission link:
//https://leetcode.com/problems/fraction-to-recurring-decimal/submissions/877867477/

class Solution {
public:
    string fractionToDecimal(int numerator, int denominator) {
        string ans="";
        if(numerator>0 ^ denominator>0){
            ans+='-';
        }
        long numerator1=labs(numerator);
        long denominator1=labs(denominator);
     
        if(numerator==0)
          return "0";
          
        long q=numerator1/denominator1;
        long r=numerator1%denominator1;
        ans+=to_string(q);
        
        
        if(r == 0){
            return ans;
        }
        else{
            ans+='.';
            unordered_map<int,long>mp;
            while(r!=0){
                if(mp.find(r)!=mp.end()){
                    int position=mp[r];
                    ans.insert(position,"(");
                    ans+=')';
                    break;
                }
                else{
                    mp[r]=ans.length();
                    r=r*10;
                    q=r/denominator1;
                    r=r%denominator1;
                    ans+=to_string(q);
                }
            }
            return ans;
        }
    }
};

